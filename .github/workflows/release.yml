# This was heavily borrowed from:
# - https://github.com/dandavison/delta
# - https://github.com/BurntSushi/ripgrep

name: Release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    name: Releasing ${{ matrix.job.target }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          # 64-bit macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            use-cross: false

          # 32-bit MSVC (Windows 7+)
          - target: i686-pc-windows-msvc
            os: windows-latest
            use-cross: false

          # 64-bit MSVC (Windows 7+)
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            use-cross: false

          # 32-bit MinGW (Windows 7+)
          - target: i686-pc-windows-gnu
            os: ubuntu-latest
            use-cross: true

          # 64-bit MinGW (Windows 7+)
          - target: x86_64-pc-windows-gnu
            os: ubuntu-latest
            use-cross: true

          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            os: ubuntu-latest
            use-cross: true

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            use-cross: true

          # 64-bit Linux with MUSL
          # - target: x86_64-unknown-linux-musl
          #   os: ubuntu-latest
          #   use-cross: true

          # ARM64 Linux
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            use-cross: true

    steps:
      - name: Installing Rust toolchain
        uses: dtolnay/rust-toolchain@master
        if: ${{ matrix.job.use-cross == false }}
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cargo build
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.7
        uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{ matrix.job.use-cross }}
          args: --release --target ${{ matrix.job.target }}

      - name: Build package
        shell: bash
        run: |
          pkg_name="aoc-cli-${GITHUB_REF/refs\/tags\//}-${{ matrix.job.target }}"
          mkdir "$pkg_name"

          cp {README.md,LICENSE} "$pkg_name/"

          if [[ "${{ matrix.job.target }}" == *"windows"* ]]; then
            cp "target/${{ matrix.job.target }}/release/aoc.exe" "$pkg_name/"
            if [ "${{ matrix.job.os }}" = "windows-latest" ]; then
              7z a "$pkg_name.zip" "$pkg_name"
            else
              zip "$pkg_name.zip" "$pkg_name"
            fi
          else
            cp "target/${{ matrix.job.target }}/release/aoc" "$pkg_name/"
            tar czvf "$pkg_name.tar.gz" "$pkg_name"
          fi

      - name: Release package
        uses: softprops/action-gh-release@v1
        with:
          files: aoc-cli-*-${{ matrix.job.target }}.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crate:
    name: Publish crate
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --token ${{ secrets.CARGO_API_TOKEN }}
